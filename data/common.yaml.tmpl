cloud::root_password: "%{hiera('root_password')}"
cloud::site_domain: "%{hiera('site_domain')}"
cloud::dns_ips: "%{hiera('dns_ips')}"
ntp::servers: "%{hiera('ntp_servers')}"

# root / enovance
root_password: {{ config.root_password }}

# Set of common configuration value
#

# Endpoints Protocols & Types

# DEPRECATED: @@VERSION@@
endpoint_proto: {{ config.endpoint_proto | default('https') }}
endpoint_protocol: {{ config.endpoint_protocol | default('https') }}
endpoint_public_protocol: {{ config.endpoint_public_protocol | default('"%{hiera(\'endpoint_protocol\')}"') }}
endpoint_internal_protocol: {{ config.endpoint_internal_protocol | default('"%{hiera(\'endpoint_protocol\')}"') }}
endpoint_admin_protocol: {{ config.endpoint_admin_protocol | default('"%{hiera(\'endpoint_protocol\')}"') }}

endpoint_type: {{ config.endpoint_type | default('publicURL') }}

# HAProxy default bind options
{% if config.haproxy_default_bind_options %}
haproxy_default_bind_options:
{% for bind_option in config.haproxy_default_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
haproxy_default_bind_options: []
{% endif %}

# Logging options
verbose: {{ config.verbose | default('false') }}
debug: {{ config.debug | default('false') }}
log_facility: {{ config.log_facility | default('LOG_LOCAL0') }}
use_syslog: {{ config.use_syslog | default('true') }}

site_domain: {{ config.domain }}
region: {{ config.region }}
dns_ips: {{ config.dns_ips }}

{% if config.ntp_servers %}
ntp_servers:
{% for server in config.ntp_servers %}  - {{ server }}
{% endfor %}
{% endif %}

vip_public_ip: {{ config.vip_public_ip }}
vip_admin_ip: {{ config.vip_admin_ip  | default('"%{hiera(\'vip_public_ip\')}"') }}
vip_internal_ip: {{ config.vip_internal_ip | default('"%{hiera(\'vip_public_ip\')}"') }}

vip_public_fqdn: {{ config.vip_public_fqdn  }}
vip_internal_fqdn: {{ config.vip_internal_fqdn | default('"%{hiera(\'vip_public_fqdn\')}"') }}
vip_admin_fqdn: {{ config.vip_admin_fqdn | default('"%{hiera(\'vip_public_fqdn\')}"') }}

public_network: {{ config.public_network }}
internal_network: {{ config.internal_network | default('"%{hiera(\'public_network\')}"') }}
admin_network: {{ config.admin_network | default('"%{hiera(\'admin_network\')}"') }}
storage_network: {{ config.storage_network | default('"%{hiera(\'storage_network\')}"') }}

public_netif: {{ config.public_netif }}
internal_netif: {{ config.internal_netif | default('"%{hiera(\'vip_public_netif\')}"') }}
admin_netif: {{ config.admin_netif | default('"%{hiera(\'vip_public_netif\')}"') }}
storage_netif: {{ config.storage_netif | default('"%{hiera(\'vip_public_netif\')}"') }}
external_netif: {{ config.external_netif | default('"%{hiera(\'vip_public_netif\')}"') }}

public_netif_ip: '{{ config.public_netif_ip }}'
internal_netif_ip: '{{ config.internal_netif_ip  | default('"%{hiera(\'vip_public_netif_ip\')}"') }}'
admin_netif_ip: '{{ config.admin_netif_ip  | default('"%{hiera(\'vip_public_netif_ip\')}"') }}'
storage_netif_ip: '{{ config.storage_netif_ip  | default('"%{hiera(\'vip_public_netif_ip\')}"') }}'

api_eth: {{ config.api_eth | default('"%{hiera(\'internal_netif_ip\')}"') }}
storage_eth: {{ config.storage_eth | default('"%{hiera(\'storage_netif_ip\')}"') }}

# Keepalived
keepalived_auth_type: {{ config.keepalived_auth_type | default('') }}
keepalived_auth_pass: {{ config.keepalived_auth_pass | default('') }}
keepalived_vrrp_interface: {{ config.keepalived_vrrp_interface | default('false') }}
keepalived_state: {{ config.keepalived_state | default('BACKUP') }}
keepalived_priority: {{ config.keepalived_priority | default('50') }}
keepalived_public_interface: {{ config.keepalived_public_interface | default('eth0') }}
keepalived_internal_interface: {{ config.keepalived_internal_interface | default('eth0') }}
{% if config.keepalived_public_ipvs %}
keepalived_public_ipvs:
{% for host in config.keepalived_public_ipvs %}  - {{ host }}
{% endfor %}
{% else %}
keepalived_public_ipvs: "%{hiera('vip_public_ip')}"
{% endif %}
{% if config.keepalived_internal_ipvs %}
keepalived_internal_ipvs:
{% for host in config.keepalived_internal_ipvs %}  - {{ host }}
{% endfor %}
{% else %}
keepalived_internal_ipvs: "%{hiera('vip_internal_ip')}"
{% endif %}

{% if config.mgmt_names %}
mgmt_names:
{% for host in config.mgmt_names %}  - {{ host }}
{% endfor %}
{% else %}
mgmt_names: []
{% endif %}

{% if config.mgmt_internal_ips %}
mgmt_internal_ips:
{% for host in config.mgmt_internal_ips %}  - {{ host }}
{% endfor %}
{% else %}
mgmt_internal_ips: []
{% endif %}

{% if config.db_allowed_hosts %}
db_allowed_hosts:
{% for host in config.db_allowed_hosts %}  - {{ host }}
{% endfor %}
{% endif %}


# Spof
spof_cluster_ip: {{ config.spof_cluster_ip | default('"%{hiera(\'internal_netif_ip\')"') }}
spof_cluster_members: {{ config.spof_cluster_members | default ('false') }}
spof_multicast_address: {{ config.spof_multicast_address | default('239.1.1.2') }}
spof_cluster_password: {{ config.spof_cluster_password | default('secrete') }}

# MongoDB
{% if config.mongo_nodes %}
mongo_nodes:
{% for host in config.mongo_nodes %}  - {{ host }}
{% endfor %}
{% else %}
mongo_nodes: "%{hiera('mgmt_internal_ips')}"
{% endif %}
mongo_nojournal: {{ config.mongo_nojournal | default('false') }}
{% if config.mongo_replset_members %}
mongo_replset_members:
{% for host in config.mongo_replset_members %}  - {{ host }}
{% endfor %}
{% else %}
mongo_replset_members:
  - "%{::hostname}"
{% endif %}
replicatset_enabled: {{ config.replicatset_enabled | default('true') }}


# MySQL
galera_ip: {{ config.galera_ip | default('"%{hiera(\'vip_internal_ip\')}"') }}
galera_master_name: {{ config.galera_master_name }}
{% if config.galera_internal_ips %}
galera_internal_ips:
{% for host in config.galera_internal_ips %}  - {{ host }}
{% endfor %}
{% else %}
galera_internal_ips: "%{hiera('mgmt_internal_ips')}"
{% endif %}
mysql_root_password: {{ config.mysql_root_password }}
mysql_sys_maint_password: {{ config.mysql_sys_maint_password | default('sys_maint') }}
galera_clustercheck_ipaddress: "%{hiera('internal_netif_ip')}"
galera_clustercheck_dbuser: {{ config.galera_clustercheck_dbuser | default ('clustercheckuser') }}
galera_clustercheck_dbpassword: {{ config.galera_clustercheck_dbpassword | default ('clustercheckpassword') }}
galera_gcache: {{ config.galera_gcache | default('1G') }}
galera_slave: {{ config.galera_slave | default('false') }}
service_provider: {{ config.service_provider | default('sysv') }}
{% if config.galera_bind_options %}
galera_bind_options:
{% for bind_option in config.galera_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
galera_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}

# Messaging
# Useful when we need a single Rabbit host (like Sensu needs)
# rabbit_hosts: defined in site.pp
{% if config.rabbit_names %}
rabbit_names:
{% for host in config.rabbit_names %}  - {{ host }}
{% endfor %}
{% else %}
rabbit_names: "%{hiera('mgmt_names')}"
{% endif %}
rabbit_host: {{ config.rabbit_host }}
{% if config.rabbit_hosts %}
rabbit_hosts:
{% for host in config.rabbit_hosts %}  - {{ host }}
{% endfor %}
{% else %}
{% for host in config.mgmt_internal_ips %} - '{{ host }}:5672'
{% endfor %}
{% endif %}
rabbit_password: {{ config.rabbit_password | default('rabbitpassword') }}
rabbit_cluster_node_type: {{ config.cluster_node_type | default('disc') }}

# Memcache
{% if config.memcache_servers %}
memcache_servers:
{% for host in config.memcache_servers %}  - {{ host }}
{% endfor %}
{% else %}
memcache_servers:
{% for host in config.mgmt_internal_ips %} - '{{ host }}:11211'
{% endfor %}
{% endif %}

# Horizon
horizon_debug: {{ config.horizon_debug | default('false') }}

{% if config.horizon_bind_options %}
horizon_bind_options:
{% for bind_option in config.horizon_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
horizon_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}
horizon_ssl_bind_options: {{ config.horizon_ssl_bind_options | default ('"%{hiera(\'haproxy_default_bind_options\')}"') }}

secret_key: {{ config.secret_key | default('secrete') }}

horizon: {{ config.horizon | default('"%{hiera(\'vip_internal_ip\')}"') }}
horizon_ssl: {{ config.horizon_ssl | default('false') }}
horizon_port: {{ config.horizon_port | default('80') }}
horizon_ssl_port: {{ config.horizon_ssl_port | default('443') }}
horizon_servername: {{ config.horizon_servername | default('"%{hiera(\'vip_internal_fqdn\')}"') }}
horizon_listen_ssl: {{ config.horizon_listen_ssl | default('false') }}
horizon_cert: {{ config.horizon_horizon_cert | default('') }}
horizon_key: {{ config.horizon_horizon_key | default('') }}
horizon_ca: {{ config.horizon_horizon_ca | default('') }}
horizon_ssl_forward: {{ config.horizon_ssl_forward | default('false') }}
horizon_listen_ssl: {{ config.horizon_listen_ssl | default('false') }}
horizon_endpoint_type: {{ config.horizon_endpoint_type | default('"%{hiera(\'endpoint_type\')}"') }}
{% if config.horizon_allowed_hosts %}
horizon_allowed_hosts:
  - "%{hiera(\'vip_internal_ip\')}"
{% for allowed_host in config.horizon_allowed_hosts %}  - {{ allowed_host }}
{% endfor %}
{% else %}
horizon_allowed_hosts:
  - "%{hiera(\'vip_internal_ip\')}"
{% endif %}

# Cinder
cinder_verbose: {{ config.cinder_verbose | default('"%{hiera(\'verbose\')}"') }}
cinder_debug: {{ config.cinder_debug | default('"%{hiera(\'debug\')}"') }}
cinder_use_syslog: {{ config.cinder_use_syslog | default('"%{hiera(\'use_syslog\')}"') }}
cinder_log_facility: {{ config.cinder_log_facility | default('"%{hiera(\'log_facility\')}"') }}

cinder_api: {{ config.cinder_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
{% if config.cinder_bind_options %}
cinder_bind_options:
{% for bind_option in config.cinder_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
cinder_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}

cinder_port: {{ config.cinder_port | default('8776') }}

cinder_rbd_user: {{ config.cinder_rbd_user | default('cinder') }}
cinder_rbd_pool: {{ config.cinder_rbd_pool | default('volumes') }}
cinder_rbd_secret_uuid: {{ config.cinder_rbd_secret_uuid | default('') }}
cinder_rbd_conf: {{ config.cinder_rbd_conf | default('/etc/ceph/ceph.conf') }}
cinder_rbd_flatten_volume_from_snapshot: {{ config.cinder_rbd_flatten_volume_from_snapshot | default('false') }}
cinder_rbd_max_clone_depth: {{ config.cinder_rbd_max_clone_depth | default('5') }}
cinder_backup_user: {{ config.cinder_backup_user | default('cinder') }}
cinder_backup_pool: {{ config.cinder_backup_pool | default('cinder_backup') }}

ks_cinder_admin_host: {{ config.cinder_admin_host | default('"%{hiera(\'vip_admin_fqdn\')}"') }}
ks_cinder_admin_proto: {{ config.cinder_admin_proto | default('"%{hiera(\'endpoint_admin_protocol\')}"') }}
ks_cinder_internal_host: {{ config.cinder_internal_host | default('"%{hiera(\'vip_internal_fqdn\')}"') }}
ks_cinder_internal_proto: {{ config.cinder_internal_proto | default('"%{hiera(\'endpoint_internal_protocol\')}"') }}
ks_cinder_public_host: {{ config.cinder_public_host | default('"%{hiera(\'vip_public_fqdn\')}"') }}
ks_cinder_public_proto: {{ config.cinder_public_proto | default('"%{hiera(\'endpoint_public_protocol\')}"') }}
ks_cinder_password: {{ config.ks_cinder_password | default('cinderpassword') }}

{% if config.cinder_db_allowed_hosts %}
cinder_db_allowed_hosts:
{% for db_allowed_host in config.cinder_db_allowed_hosts %}  - {{ db_allowed_host }}
{% endfor %}
{% else %}
cinder_db_allowed_hosts: "%{hiera('db_allowed_hosts')}"
{% endif %}
cinder_db_host: {{ config.cinder_db_host | default('"%{hiera(\'galera_ip\')}"') }}
cinder_db_user: {{ config.cinder_db_user | default('cinder') }}
cinder_db_password: {{ config.cinder_db_password | default('cinderpassword') }}

cinder_endpoint_type: {{ config.cinder_endpoint_type | default('"%{hiera(\'endpoint_type\')}"') }}
{% if config.volume_cinder_backends %}
volume_cinder_backends:
{% for backend, desc in config.volume_cinder_backends.iteritems() %}
  {{ backend }}:
  {% for type, spec in desc.iteritems() %}
    {{ type }}:
    {% for key, value in spec.iteritems() %}
      {{ key }}: {{ value }}
    {% endfor %}
  {% endfor %}
{% endfor %}
{% else %}
volume_cinder_backends: {}
{% endif %}

# Heat
heat_verbose: {{ config.heat_verbose | default('"%{hiera(\'verbose\')}"') }}
heat_debug: {{ config.heat_debug | default('"%{hiera(\'debug\')}"') }}
heat_use_syslog: {{ config.heat_use_syslog | default('"%{hiera(\'use_syslog\')}"') }}
heat_log_facility: {{ config.heat_log_facility | default('"%{hiera(\'log_facility\')}"') }}

heat_api: {{ config.heat_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
heat_cfn_api: {{ config.heat_cfn_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
heat_cloudwatch_api: {{ config.heat_cloudwatch_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
{% if config.heat_api_bind_options %}
heat_api_bind_options:
{% for bind_option in config.heat_api_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
heat_api_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}
{% if config.heat_cfn_bind_options %}
heat_cfn_bind_options:
{% for bind_option in config.heat_cfn_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
heat_cfn_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}
{% if config.heat_cloudwatch_bind_options %}
heat_cloudwatch_bind_options:
{% for bind_option in config.heat_cloudwatch_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
heat_cloudwatch_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}

heat_port: {{ config.heat_port | default('8004') }}
heat_cfn_port: {{ config.heat_cfn_port | default('8000') }}
heat_cloudwatch_port: {{ config.heat_cloudwatch_port | default('8003') }}

ks_heat_admin_host: {{ config.heat_admin_host | default('"%{hiera(\'vip_admin_fqdn\')}"') }}
ks_heat_admin_proto: {{ config.heat_admin_proto | default('"%{hiera(\'endpoint_admin_protocol\')}"') }}
ks_heat_internal_host: {{ config.heat_internal_host | default('"%{hiera(\'vip_internal_fqdn\')}"') }}
ks_heat_internal_proto: {{ config.heat_internal_proto | default('"%{hiera(\'endpoint_internal_protocol\')}"') }}
ks_heat_public_host: {{ config.heat_public_host | default('"%{hiera(\'vip_public_fqdn\')}"') }}
ks_heat_public_proto: {{ config.heat_public_proto | default('"%{hiera(\'endpoint_public_protocol\')}"') }}
ks_heat_password: {{ config.ks_heat_password | default('heatpassword') }}

{% if config.heat_db_allowed_hosts %}
heat_db_allowed_hosts:
{% for db_allowed_host in config.heat_db_allowed_hosts %}  - {{ db_allowed_host }}
{% endfor %}
{% else %}
heat_db_allowed_hosts: "%{hiera('db_allowed_hosts')}"
{% endif %}
heat_db_host: {{ config.heat_db_host | default('"%{hiera(\'galera_ip\')}"') }}
heat_db_user: {{ config.heat_db_user | default('heat') }}
heat_db_password: {{ config.heat_db_password | default('heatpassword') }}

heat_endpoint_type: {{ config.heat_endpoint_type | default('"%{hiera(\'endpoint_type\')}"') }}

heat_workers: {{ config.heat_workers | default('"%{::processorcount}"') }}

heat_engine_enabled: {{ config.heat_engine_enabled | default('true') }}

heat_auth_encryption_key: {{ config.heat_auth_encryption_key | default('secrete') }}

# Glance
glance_api_verbose: {{ config.glance_api_verbose | default('"%{hiera(\'verbose\')}"') }}
glance_api_debug: {{ config.glance_api_debug | default('"%{hiera(\'debug\')}"') }}
glance_api_use_syslog: {{ config.glance_api_use_syslog | default('"%{hiera(\'use_syslog\')}"') }}
glance_api_log_facility: {{ config.glance_api_log_facility | default('"%{hiera(\'log_facility\')}"') }}

glance_registry_verbose: {{ config.glance_registry_verbose | default('"%{hiera(\'verbose\')}"') }}
glance_registry_debug: {{ config.glance_registry_debug | default('"%{hiera(\'debug\')}"') }}
glance_registry_use_syslog: {{ config.glance_registry_use_syslog | default('"%{hiera(\'use_syslog\')}"') }}
glance_registry_log_facility: {{ config.glance_registry_log_facility | default('"%{hiera(\'log_facility\')}"') }}

glance_api: {{ config.glance_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
glance_registry: {{ config.glance_registry | default('"%{hiera(\'vip_internal_ip\')}"') }}
glance_api_bind_options: {{ config.glance_api_bind_options | default('"%{hiera(\'haproxy_default_bind_options\')}"') }}
glance_registry_bind_options: {{ config.glance_registry_bind_options | default('"%{hiera(\'haproxy_default_bind_options\')}"') }}
{% if config.glance_api_bind_options %}
glance_api_bind_options:
{% for bind_option in config.glance_api_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
glance_api_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}
{% if config.glance_registry_bind_options %}
glance_registry_bind_options:
{% for bind_option in config.glance_registry_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
glance_registry_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}

glance_backend: {{ config.glance_backend | default('rbd') }}
glance_rbd_pool: {{ config.glance_rbd_pool | default('images') }}
glance_rbd_user: {{ config.glance_rbd_user | default('glance') }}

glance_filesystem_store_datadir: {{ config.glance_filesystem_store_datadir | default('glance_filesystem_store_datadir') }}

glance_api_port: {{ config.glance_api_port | default('9292') }}
glance_registry_port: {{ config.glance_registry_port | default('9191') }}

ks_glance_api_admin_host: {{ config.glance_api_admin_host | default('"%{hiera(\'vip_admin_fqdn\')}"') }}
ks_glance_api_admin_proto: {{ config.glance_api_admin_proto | default('"%{hiera(\'endpoint_admin_protocol\')}"') }}
ks_glance_api_internal_host: {{ config.glance_api_internal_host | default('"%{hiera(\'vip_internal_fqdn\')}"') }}
ks_glance_api_internal_proto: {{ config.glance_api_internal_proto | default('"%{hiera(\'endpoint_internal_protocol\')}"') }}
ks_glance_api_public_host: {{ config.glance_api_public_host | default('"%{hiera(\'vip_public_fqdn\')}"') }}
ks_glance_api_public_proto: {{ config.glance_api_public_proto | default('"%{hiera(\'endpoint_public_protocol\')}"') }}
ks_glance_api_password: {{ config.ks_glance_api_password | default('glancepassword') }}

ks_glance_registry_admin_host: {{ config.glance_registry_admin_host | default('"%{hiera(\'vip_admin_fqdn\')}"') }}
ks_glance_registry_admin_proto: {{ config.glance_registry_admin_proto | default('"%{hiera(\'endpoint_admin_protocol\')}"') }}
ks_glance_registry_internal_host: {{ config.glance_registry_internal_host | default('"%{hiera(\'vip_internal_fqdn\')}"') }}
ks_glance_registry_internal_proto: {{ config.glance_registry_internal_proto | default('"%{hiera(\'endpoint_internal_protocol\')}"') }}
ks_glance_registry_public_host: {{ config.glance_registry_public_host | default('"%{hiera(\'vip_public_fqdn\')}"') }}
ks_glance_registry_public_proto: {{ config.glance_registry_public_proto | default('"%{hiera(\'endpoint_public_protocol\')}"') }}

ks_glance_password: {{ config.ks_glance_password | default('glancepassword') }}

{% if config.glance_db_allowed_hosts %}
glance_db_allowed_hosts:
{% for db_allowed_host in config.glance_db_allowed_hosts %}  - {{ db_allowed_host }}
{% endfor %}
{% else %}
glance_db_allowed_hosts: "%{hiera('db_allowed_hosts')}"
{% endif %}
glance_db_host: {{ config.glance_db_host | default('"%{hiera(\'galera_ip\')}"') }}
glance_db_user: {{ config.glance_db_user | default('glance') }}
glance_db_password: {{ config.glance_db_password | default('glancepassword') }}

# Ceilometer
ceilometer_verbose: {{ config.ceilometer_verbose | default('"%{hiera(\'verbose\')}"') }}
ceilometer_debug: {{ config.ceilometer_debug | default('"%{hiera(\'debug\')}"') }}
ceilometer_use_syslog: {{ config.ceilometer_use_syslog | default('"%{hiera(\'use_syslog\')}"') }}
ceilometer_log_facility: {{ config.ceilometer_log_facility | default('"%{hiera(\'log_facility\')}"') }}

ceilometer_api: {{ config.ceilometer_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
ceilometer_centralagent_enabled: {{ config.ceilometer_centralagent_enabled | default('true') }}
{% if config.ceilometer_bind_options %}
ceilometer_bind_options:
{% for bind_option in config.ceilometer_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
ceilometer_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}
ceilometer_endpoint_type: {{ config.ceilometer_endpoint_type | default('"%{hiera(\'endpoint_type\')}"') }}

ceilometer_port: {{ config.ceilometer_port | default('8777') }}

ks_ceilometer_admin_host: {{ config.ceilometer_admin_host | default('"%{hiera(\'vip_admin_fqdn\')}"') }}
ks_ceilometer_admin_proto: {{ config.ceilometer_admin_proto | default('"%{hiera(\'endpoint_admin_protocol\')}"') }}
ks_ceilometer_internal_host: {{ config.ceilometer_internal_host | default('"%{hiera(\'vip_internal_fqdn\')}"') }}
ks_ceilometer_internal_proto: {{ config.ceilometer_internal_proto | default('"%{hiera(\'endpoint_internal_protocol\')}"') }}
ks_ceilometer_public_host: {{ config.ceilometer_public_host | default('"%{hiera(\'vip_public_fqdn\')}"') }}
ks_ceilometer_public_proto: {{ config.ceilometer_public_proto | default('"%{hiera(\'endpoint_public_protocol\')}"') }}
ks_ceilometer_password: {{ config.ks_ceilometer_password | default('ceilometerpassword') }}

ceilometer_endpoint_type: {{ config.ceilometer_endpoint_type | default('"%{hiera(\'endpoint_type\')}"') }}

ceilometer_secret: {{ config.ceilometer_secret | default('ceilometersecret') }}


# Ceph
ceph_public_network: "%{hiera('public_network')}"
ceph_cluster_network: "%{hiera('storage_network')}"
ceph_fsid: {{ config.ceph_fsid | default('') }}
ceph_mon_secret: {{ config.ceph_mon_secret }}
{% if config.ceph_osd_devices %}
ceph_osd_devices:
{% for disk in config.ceph_osd_devices %}  - {{ disk }}
{% endfor %}
{% else %}
ceph_osd_devices: []
{% endif %}
ceph_names:
{% for hname in hosts %}{% if hosts[hname].profile != 'install-server' %}  - {{ hname }}{% endif %}
{% endfor %}

ceph_osd_public_address: {{ config.ceph_osd_public_address | default('"%{hiera(\'public_netif_ip\')}"') }}
ceph_osd_cluster_address: {{ config.ceph_osd_cluster_address | default('"%{hiera(\'internal_netif_ip\')}"') }}

ceph_monitor_id: {{ config.ceph_monitor_id | default('"%{::uniqueid}"') }}

volume_default_volume_type: {{ config.volume_default_volume_type | default('') }}
backup_ceph_pool: {{ config.backup_ceph_pool | default('backup') }}
backup_ceph_user: {{ config.backup_ceph_user | default('cinder') }}

# Keystone
keystone_api: {{ config.keystone_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
keystone_admin_api: {{ config.keystone_admin_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
{% if config.keystone_bind_options %}
keystone_bind_options:
{% for bind_option in config.keystone_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
keystone_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}
{% if config.keystone_adming_bind_options %}
keystone_adming_bind_options:
{% for bind_option in config.keystone_adming_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
keystone_adming_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}

keystone_verbose: {{ config.keystone_verbose | default('"%{hiera(\'verbose\')}"') }}
keystone_debug: {{ config.keystone_debug | default('"%{hiera(\'debug\')}"') }}
keystone_use_syslog: {{ config.keystone_use_syslog | default('"%{hiera(\'use_syslog\')}"') }}
keystone_log_facility: {{ config.keystone_log_facility | default('"%{hiera(\'log_facility\')}"') }}

{% if config.keystone_db_allowed_hosts %}
keystone_db_allowed_hosts:
{% for db_allowed_host in config.keystone_db_allowed_hosts %}  - {{ db_allowed_host }}
{% endfor %}
{% else %}
keystone_db_allowed_hosts: "%{hiera('db_allowed_hosts')}"
{% endif %}
keystone_db_host: {{ config.keystone_db_host | default('"%{hiera(\'galera_ip\')}"') }}
keystone_db_user: {{ config.keystone_db_user | default('keystone') }}
keystone_db_password: {{ config.keystone_db_password | default('keystonepassword') }}

ks_admin_email: {{ config.ks_admin_email | default('no-reply@keystone.openstack') }}
ks_admin_password: {{ config.ks_admin_password | default('adminpassword') }}
ks_admin_token: {{ config.ks_admin_token | default('') }}
ks_admin_tenant: {{ config.ks_admin_tenant | default('admin') }}

keystone_port: {{ config.keystone_port | default('5000') }}
keystone_admin_port: {{ config.keystone_admin_port | default('35357') }}

ks_keystone_admin_host: {{ config.keystone_admin_host | default('"%{hiera(\'vip_admin_fqdn\')}"') }}
ks_keystone_admin_proto: {{ config.keystone_admin_proto | default('"%{hiera(\'endpoint_admin_protocol\')}"') }}
ks_keystone_internal_host: {{ config.keystone_internal_host | default('"%{hiera(\'vip_internal_fqdn\')}"') }}
ks_keystone_internal_proto: {{ config.keystone_internal_proto | default('"%{hiera(\'endpoint_internal_protocol\')}"') }}
ks_keystone_public_host: {{ config.keystone_public_host | default('"%{hiera(\'vip_public_fqdn\')}"') }}
ks_keystone_public_proto: {{ config.keystone_public_proto | default('"%{hiera(\'endpoint_public_protocol\')}"') }}

ks_token_expiration: {{ config.ks_token_expiration | default('3600') }}
ks_token_driver: {{ config.ks_token_driver | default('keystone.token.backends.sql.Token') }}

# Nova
nova_verbose: {{ config.nova_verbose | default('"%{hiera(\'verbose\')}"') }}
nova_debug: {{ config.nova_debug | default('"%{hiera(\'debug\')}"') }}
nova_use_syslog: {{ config.nova_use_syslog | default('"%{hiera(\'use_syslog\')}"') }}
nova_log_facility: {{ config.nova_log_facility | default('"%{hiera(\'log_facility\')}"') }}

nova_shell: {{ config.nova_shell | default('/bin/bash') }}

nova_api: {{ config.nova_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
nova_ec2_api: {{ config.nova_ec2_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
nova_metadata_api: {{ config.nova_metadata_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
spice: {{ config.spice | default('"%{hiera(\'vip_internal_ip\')}"') }}

{% if config.nova_bind_options %}
nova_bind_options:
{% for bind_option in config.nova_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
nova_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}
{% if config.nova_metadata_bind_options %}
nova_metadata_bind_options:
{% for bind_option in config.nova_metadata_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
nova_metadata_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}
{% if config.nova_ec2_bind_options %}
nova_ec2_bind_options:
{% for bind_option in config.nova_ec2_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
nova_ec2_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}
{% if config.spice_bind_options %}
spice_bind_options:
{% for bind_option in config.spice_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
spice_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}

nova_endpoint_type: {{ config.nova_endpoint_type | default('"%{hiera(\'endpoint_type\')}"') }}

nova_port: {{ config.nova_port | default('8774') }}
nova_ec2_port: {{ config.nova_ec2_port | default('8773') }}
nova_metadata_port: {{ config.nova_metadata_port | default('8775') }}
spice_port: {{ config.spice_port | default('6082') }}
spice_secure: {{ config.spice_secure | default('false') }}

ks_nova_admin_host: {{ config.nova_admin_host | default('"%{hiera(\'vip_admin_fqdn\')}"') }}
ks_nova_admin_proto: {{ config.nova_admin_proto | default('"%{hiera(\'endpoint_admin_protocol\')}"') }}
ks_nova_internal_host: {{ config.nova_internal_host | default('"%{hiera(\'vip_internal_fqdn\')}"') }}
ks_nova_internal_proto: {{ config.nova_internal_proto | default('"%{hiera(\'endpoint_internal_protocol\')}"') }}
ks_nova_public_host: {{ config.nova_public_host | default('"%{hiera(\'vip_public_fqdn\')}"') }}
ks_nova_public_proto: {{ config.nova_public_proto | default('"%{hiera(\'endpoint_public_protocol\')}"') }}
ks_nova_password: {{ config.ks_nova_password | default('novapassword') }}

{% if config.nova_db_allowed_hosts %}
nova_db_allowed_hosts:
{% for db_allowed_host in config.nova_db_allowed_hosts %}  - {{ db_allowed_host }}
{% endfor %}
{% else %}
nova_db_allowed_hosts: "%{hiera('db_allowed_hosts')}"
{% endif %}
nova_db_host: {{ config.nova_db_host | default('"%{hiera(\'galera_ip\')}"') }}
nova_db_user: {{ config.nova_db_user | default('nova') }}
nova_db_password: {{ config.nova_db_password | default('novapassword') }}
nova_db_use_slave: {{ config.nova_db_use_slave | default('false') }}

nova_rbd_pool: {{ config.nova_rbd_pool | default('vms') }}
nova_rbd_secret_uuid: {{ config.nova_rbd_secret_uuid | default('') }}
vm_rbd: {{ config.vm_rbd | default('false') }}
volume_rbd: {{ config.volume_rbd | default('false') }}

nova_metadata_server: {{ config.nova_metadata_server | default('"%{hiera(\'vip_public_fqdn\')}"') }}

nova_admin_username: {{ config.nova_admin_username | default('nova') }}
nova_admin_tenant_name: {{ config.nova_admin_tenant_name | default('services') }}
nova_admin_password: {{ config.nova_admin_password | default('novapassword') }}
nova_endpoint_type: {{ config.nova_endpoint_type | default('"%{hiera(\'endpoint_type\')}"') }}
nova_region: {{ config.nova_region | default('"%{hiera(\'region\')}"') }}

nova_ssh_public_key: {{ config.nova_ssh_public_key }}
nova_ssh_private_key: |
  {{ config.nova_ssh_private_key.split('\n')|join("\n  ") }}
libvirt_type: '{{ config.libvirt_type | default('kvm') }}'

manage_tso: {{ config.manage_tso | default('true') }}

nova_url: {{ config.nova_url | default('"%{hiera(\'ks_nova_internal_proto\')}://%{hiera(\'vip_internal_fqdn\')}:%{hiera(\'nova_port\')}/v2"') }}
nova_admin_auth_url: {{ config.nova_admin_url | default('"%{hiera(\'ks_nova_admin_proto\')}://%{hiera(\'vip_admin_fqdn\')}:%{hiera(\'keystone_admin_port\')}/v2.0"') }}

nfs_enabled: {{ config.nfs_enabled | default('false') }}
nfs_device: {{ config.nfs_device | default('false') }}
nfs_options: {{ config.nfs_options | default('defaults') }}
filesystem_store_datadir: {{ config.filesystem_store_datadir | default('/var/lib/nova/instances') }}


# Neutron
neutron_verbose: {{ config.neutron_verbose | default('"%{hiera(\'verbose\')}"') }}
neutron_debug: {{ config.neutron_debug | default('"%{hiera(\'debug\')}"') }}
neutron_use_syslog: {{ config.neutron_use_syslog | default('"%{hiera(\'use_syslog\')}"') }}
neutron_log_facility: {{ config.neutron_log_facility | default('"%{hiera(\'log_facility\')}"') }}

neutron_api: {{ config.neutron_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
{% if config.neutron_bind_options %}
neutron_bind_options:
{% for bind_option in config.neutron_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
neutron_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}

neutron_port: {{ config.neutron_port | default('9696') }}

ks_neutron_admin_host: {{ config.neutron_admin_host | default('"%{hiera(\'vip_admin_fqdn\')}"') }}
ks_neutron_admin_proto: {{ config.neutron_admin_proto | default('"%{hiera(\'endpoint_admin_protocol\')}"') }}
ks_neutron_internal_host: {{ config.neutron_internal_host | default('"%{hiera(\'vip_internal_fqdn\')}"') }}
ks_neutron_internal_proto: {{ config.neutron_internal_proto | default('"%{hiera(\'endpoint_internal_protocol\')}"') }}
ks_neutron_public_host: {{ config.neutron_public_host | default('"%{hiera(\'vip_public_fqdn\')}"') }}
ks_neutron_public_proto: {{ config.neutron_public_proto | default('"%{hiera(\'endpoint_public_protocol\')}"') }}
ks_neutron_password: {{ config.ks_neutron_password | default('neutronpassword') }}

{% if config.neutron_db_allowed_hosts %}
neutron_db_allowed_hosts:
{% for db_allowed_host in config.neutron_db_allowed_hosts %}  - {{ db_allowed_host }}
{% endfor %}
{% else %}
neutron_db_allowed_hosts: "%{hiera('db_allowed_hosts')}"
{% endif %}
neutron_db_host: {{ config.neutron_db_host | default('"%{hiera(\'galera_ip\')}"') }}
neutron_db_user: {{ config.neutron_db_user | default('neutron') }}
neutron_db_password: {{ config.neutron_db_password | default('neutronpassword') }}

neutron_metadata_proxy_shared_secret: {{ config.neutron_metadata_proxy_shared_secret | default('asecreteaboutneutron') }}
neutron_region: {{ config.neutron_region | default('"%{hiera(\'region\')}"') }}

neutron_provider_vlan_ranges:
{% for provider_vlan_range in config.neutron_provider_vlan_ranges | default(['physnet1:1000:2999']) %} - {{ provider_vlan_range }}
{% endfor %}
neutron_provider_bridge_mappings:
{% for provider_bridge_mapping in config.neutron_provider_bridge_mappings | default(['public:br-pub']) %} - {{ provider_bridge_mapping }}
{% endfor %}
neutron_dhcp_lease_duration: {{ config.neutron_dhcp_lease_duration | default('120') }}
neutron_flat_networks:
{% for flat_network in config.neutron_flat_networks | default(['public']) %} - {{ flat_network }}
{% endfor %}

neutron_manage_haproxy_pkg: {{ config.neutron_manage_haproxy_pkg | default('false') }}

neutron_driver: {{ config.neutron_driver | default('ml2_ovs') }}
neutron_ml2_enabled: {{ config.neutron_ml2_enabled | default('true') }}
neutron_veth_mtu: {{ config.neutron_veth_mtu | default('1500') }}
neutron_dnsmasq_dns_server: {{ config.neutron_dnsmasq_dns_server | default('false') }}

neutron_metadata_enabled: {{ config.neutron_metadata_enabled | default('true') }}
neutron_external_int: {{ config.neutron_external_int | default('"%{hiera(\'external_netif\')}"') }}
neutron_external_bridge: {{ config.neutron_external_bridge | default('br-pub') }}
neutron_manage_external_network: {{ config.neutron_manage_external_network | default('false') }}
neutron_tunnel_eth: {{ config.neutron_tunnel_eth | default('"%{hiera(\'internal_netif_ip\')}"') }}
neutron_tunnel_types:
{% for tunnel_type in config.neutron_tunnel_types | default(['gre']) %} - {{ tunnel_type }}
{% endfor %}
neutron_tenant_network_types:
{% for tenant_network_type in config.neutron_tenant_network_types | default(['gre']) %} - {{ tenant_network_type }}
{% endfor %}
neutron_type_drivers:
{% for type_driver in config.neutron_type_drivers | default(['gre','vlan','flat']) %} - {{ type_driver}}
{% endfor %}
neutron_external_provider_net: {{ config.neutron_external_provider_net | default('false') }}

# Neutron N1KV Settings
neutron_n1kv_vsm_ip: {{ config.neutron_n1kv_vsm_ip | default('127.0.0.1') }}
neutron_n1kv_vsm_domain_id: {{ config.neutron_n1kv_vsm_domain_id | default('1000') }}
neutron_n1kv_source: {{ config.neutron_n1kv_source | default('') }}
neutron_n1kv_version: {{ config.neutron_n1kv_version | default('present') }}
neutron_host_mgmt_intf: {{ config.neutron_host_mgmt_intf | default('eth0') }}
{% if config.neutron_uplink_profile %}
neutron_uplink_profile:
{% for check, desc in config.neutron_uplink_profile.iteritems() %}
  {{ check }}:
  {% for key, value in desc.iteritems() %}
    {{ key }}: {{ value }}
  {% endfor %}
{% endfor %}
{% else %}
neutron_uplink_profile: {}
{% endif %}
{% if config.neutron_vtep_config %}
neutron_vtep_config:
{% for check, desc in config.neutron_vtep_config.iteritems() %}
  {{ check }}:
  {% for key, value in desc.iteritems() %}
    {{ key }}: {{ value }}
  {% endfor %}
{% endfor %}
{% else %}
neutron_vtep_config: {}
{% endif %}
neutron_node_type: {{ config.neutron_node_type | default('compute') }}
neutron_vteps_in_same_subnet: {{ config.neutron_vteps_in_same_subnet | default('false') }}


# Trove
trove_enabled: {{ config.trove_enabled | default('false') }}
trove_api: {{ config.trove_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
{% if config.trove_bind_options %}
trove_bind_options:
{% for bind_option in config.trove_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
trove_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}

trove_port: {{ config.trove_port | default('8779') }}

ks_trove_admin_host: {{ config.trove_admin_host | default('"%{hiera(\'vip_admin_fqdn\')}"') }}
ks_trove_admin_proto: {{ config.trove_admin_proto | default('"%{hiera(\'endpoint_admin_protocol\')}"') }}
ks_trove_internal_host: {{ config.trove_internal_host | default('"%{hiera(\'vip_internal_fqdn\')}"') }}
ks_trove_internal_proto: {{ config.trove_internal_proto | default('"%{hiera(\'endpoint_internal_protocol\')}"') }}
ks_trove_public_host: {{ config.trove_public_host | default('"%{hiera(\'vip_public_fqdn\')}"') }}
ks_trove_public_proto: {{ config.trove_public_proto | default('"%{hiera(\'endpoint_public_protocol\')}"') }}
ks_trove_password: {{ config.ks_trove_password | default('trovepassword') }}

{% if config.trove_db_allowed_hosts %}
trove_db_allowed_hosts:
{% for db_allowed_host in config.trove_db_allowed_hosts %}  - {{ db_allowed_host }}
{% endfor %}
{% else %}
trove_db_allowed_hosts: "%{hiera('db_allowed_hosts')}"
{% endif %}
trove_db_host: {{ config.trove_db_host | default('"%{hiera(\'galera_ip\')}"') }}
trove_db_user: {{ config.trove_db_user | default('trove') }}
trove_db_password: {{ config.trove_db_password | default('trovepassword') }}

trove_metadata_proxy_shared_secret: {{ config.trove_metadata_proxy_shared_secret | default('asecreteabouttrove') }}
trove_region: {{ config.trove_region | default('"%{hiera(\'region\')}"') }}

# Swift
swift_enabled: {{ config.swift_enabled | default('true') }}
swift_ringbuilder_enabled: {{ config.swift_ringbuilder_enabled | default('false') }}

swift_api: {{ config.swift_api | default('"%{hiera(\'vip_internal_ip\')}"') }}
{% if config.swift_bind_options %}
swift_bind_options:
{% for bind_option in config.swift_bind_options %} - {{ bind_option }}
{% endfor %}
{% else %}
swift_bind_options: "%{hiera('haproxy_default_bind_options')}"
{% endif %}

swift_port: {{ config.swift_port | default('8080') }}
container_port: {{ config.container_port| default('6001') }}
object_port: {{ config.object_port| default('6000') }}
account_port: {{ config.container_port| default('6002') }}

ks_swift_admin_host: {{ config.swift_admin_host | default('"%{hiera(\'vip_admin_fqdn\')}"') }}
ks_swift_admin_proto: {{ config.swift_admin_proto | default('"%{hiera(\'endpoint_admin_protocol\')}"') }}
ks_swift_internal_host: {{ config.swift_internal_host | default('"%{hiera(\'vip_internal_fqdn\')}"') }}
ks_swift_internal_proto: {{ config.swift_internal_proto | default('"%{hiera(\'endpoint_internal_protocol\')}"') }}
ks_swift_public_host: {{ config.swift_public_host | default('"%{hiera(\'vip_public_fqdn\')}"') }}
ks_swift_public_proto: {{ config.swift_public_proto | default('"%{hiera(\'endpoint_public_protocol\')}"') }}
ks_swift_password: {{ config.ks_swift_password | default('swiftpassword') }}
ks_swift_dispersion_password: {{ config.ks_swift_dispersion_password | default('dispersion') }}

swift_hash_suffix: {{ config.swift_hash_suffix }}
swift_components:
{% for component in config.swift_components | default(['account', 'container','object']) %} - {{ component }}
{% endfor %}
swift_rsync_max_connections: {{ config.swift_rsync_max_connections | default('5') }}
swift_ring_container_device: {{ config.swift_ring_container_device | default('sdb') }}
swift_ring_account_device: {{ config.swift_ring_account_device | default('sdb') }}
{% if config.swift_device_config_hash %}
swift_device_config_hash:
{% for check, desc in config.swift_device_config_hash.iteritems() %}
  {{ check }}:
  {% for key, value in desc.iteritems() %}
    {{ key }}: {{ value }}
  {% endfor %}
{% endfor %}
{% else %}
swift_device_config_hash: {}
{% endif %}

swift_fstype: {{ config.swift_fstype | default('xfs') }}
# DEPRECATED @@VERSIONS@@
replicas: {{ config.replicas | default('3') }}
swift_replicas: {{ config.swift_replicas | default('3') }}
swift_rsyncd_ipaddress: {{ config.swift_rsyncd_ipaddress | default('"%{hiera(\'internal_netif_ip\')}"')}}
statsd_host: {{ config.statsd_host | default('"%{hiera(\'internal_netif_ip\')}"') }}
statsd_port: {{ config.statsd_port | default('4125') }}
swift_identity_roles_addons:
{% for role in config.swift_identity_roles_addons | default(['SwiftOperator', 'ResellerAdmin']) %} - {{ role }}
{% endfor %}

# Monitoring
{% if config.sensu_checks %}
sensu_checks:
{% for check, desc in config.sensu_checks.iteritems() %}
  {{ check }}:
  {% for key, value in desc.iteritems() %}
    {{ key }}: {{ value }}
  {% endfor %}
{% endfor %}
{% else %}
sensu_checks: {}
{% endif %}
{% if config.sensu_handlers %}
sensu_handlers:
{% for check, desc in config.sensu_handlers.iteritems() %}
  {{ check }}:
  {% for key, value in desc.iteritems() %}
    {{ key }}: {{ value }}
  {% endfor %}
{% endfor %}
{% else %}
sensu_handlers: {}
{% endif %}
{% if config.sensu_plugins %}
sensu_plugins:
{% for check, desc in config.sensu_plugins.iteritems() %}
  {{ check }}:
  {% for key, value in desc.iteritems() %}
    {{ key }}: {{ value }}
  {% endfor %}
{% endfor %}
{% else %}
sensu_plugins: {}
{% endif %}
sensu_rabbitmq_user: {{ config.sensu_rabbitmq_user | default('sensu') }}
sensu_rabbitmq_password: {{ config.sensu_rabbitmq_password | default('rabbitpassword') }}
sensu_rabbitmq_vhost: {{ config.sensu_rabbitmq_vhost | default ('/sensu') }}
sensu_uchiwa_ip: {{ config.sensu_uchiwa_ip | default('127.0.0.01') }}

# Logging
logging_syslog_enable: {{ config.logging_syslog_enable | default('true') }}
{% if config.logging_matches %}
logging_matches:
{% for check, desc in config.logging_matches.iteritems() %}
  {{ check }}:
  {% for key, value in desc.iteritems() %}
    {{ key }}: {{ value }}
  {% endfor %}
{% endfor %}
{% else %}
logging_matches: {}
{% endif %}
{% if config.logging_sources %}
logging_sources:
{% for check, desc in config.logging_sources.iteritems() %}
  {{ check }}:
  {% for key, value in desc.iteritems() %}
    {{ key }}: {{ value }}
  {% endfor %}
{% endfor %}
{% else %}
logging_sources: {}
{% endif %}
{% if config.logging_plugins %}
logging_plugins:
{% for check, desc in config.logging_plugins.iteritems() %}
  {{ check }}:
  {% for key, value in desc.iteritems() %}
    {{ key }}: {{ value }}
  {% endfor %}
{% endfor %}
{% else %}
logging_plugins: {}
{% endif %}
{% if config.logging_logrotate_rule %}
logging_logrotate_rule:
{% for check, desc in config.logging_logrotate_rule.iteritems() %}
  {{ check }}:
  {% for key, value in desc.iteritems() %}
    {{ key }}: {{ value }}
  {% endfor %}
{% endfor %}
{% else %}
logging_logrotate_rule: {}
{% endif %}

# Rsyslog
rsyslog::client::log_remote: true
rsyslog::client::remote_type: udp
rsyslog::client::remote_forward_format: RSYSLOG_TraditionalForwardFormat
rsyslog::client::port: {{ config.syslog_port }}
rsyslog::client::server: {{ config.syslog_server }}

# HAproxy
haproxy_auth: {{ config.haproxy_auth | default('admin:changeme') }}

classes:
  - cloud
